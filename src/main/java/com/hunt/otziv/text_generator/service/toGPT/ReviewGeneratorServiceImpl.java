package com.hunt.otziv.text_generator.service.toGPT;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hunt.otziv.text_generator.dto.PromptDTO;
import com.hunt.otziv.text_generator.service.parser.WebsiteParserService;
import com.theokanning.openai.OpenAiHttpException;
import com.theokanning.openai.completion.chat.ChatCompletionRequest;
import com.theokanning.openai.completion.chat.ChatCompletionResult;
import com.theokanning.openai.completion.chat.ChatMessage;
import com.theokanning.openai.service.OpenAiService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.List;

@Service
@Slf4j
@RequiredArgsConstructor
public class ReviewGeneratorServiceImpl implements ReviewGeneratorService {
    private final OpenAiService openAiService;


    public String safeGenerateSingleReview(PromptDTO promptDTO) {
        ChatCompletionRequest request = ChatCompletionRequest.builder()
//                .model("gpt-3.5-turbo")
                .model("gpt-4o")
                .messages(List.of(
                        new ChatMessage("system", "Ты человек пишуший отзыв о компании в которой был. " +promptDTO.getSystem()),
                        new ChatMessage("user", promptDTO.getPrompt() )
                ))
                .temperature(promptDTO.getTemperature())
                .maxTokens(400)
                .build();

        try {
            ChatCompletionResult result = openAiService.createChatCompletion(request);
            String content = result.getChoices().getFirst().getMessage().getContent().trim();
            log.info("✅ Получен отзыв ({} токенов)", content.length());
            return content;
        } catch (Exception e) {
            log.error("❌ Ошибка при генерации отзыва: {}", e.getMessage());
            return "⚠️ Ошибка при генерации отзыва.";
        }
    }

    public String minusSlova(String text) {
        ChatCompletionRequest request = ChatCompletionRequest.builder()
//                .model("gpt-3.5-turbo")
                .model("gpt-4o")
                .messages(List.of(
                        new ChatMessage("system", "Ты - Редактор текстов отзывов, который делает тексты более человечными. "),
                        new ChatMessage("user","Перепиши текст отзыва в более обычном разговорном стиле, без клише, восторгов и ярких эмоций. Но смайлы, если есть, можешь оставлять. Вот текст: " + text + "Убери  слова и словосочетания такие как - в восторге, превзошло все ожидания, это то, что нам нужно, невероятно, были отзывчивы, атмосферу, были в восторге, просто супер, на высшем уровне, был безупречным, настоящая находка, сразу понял/поняла это то что нужно, был приятно удивлен ")
                ))
                .temperature(0.8)
                .maxTokens(400)
                .build();

        try {
            ChatCompletionResult result = openAiService.createChatCompletion(request);
            String content = result.getChoices().getFirst().getMessage().getContent().trim();
            log.info("✅ Получен отзыв ({} токенов)", content.length());
            return content;
        } catch (Exception e) {
            log.error("❌ Ошибка при генерации отзыва: {}", e.getMessage());
            return "⚠️ Ошибка при генерации отзыва.";
        }
    }


    public String safeAnalyzeSiteTextNoShablon(String siteRaw) {
        try {
            ChatCompletionRequest request = ChatCompletionRequest.builder()
                    .model("gpt-3.5-turbo")
                    .messages(List.of(
                            new ChatMessage("system", "Ты помощник, который структурирует текст сайта для генерации отзывов."),
                            new ChatMessage("user", "Изучи, проанализируй информацию и сделай краткую выжимку самой важной информации. Вот текст:\n" +
                                    siteRaw )
                    ))
                    .build();

            return openAiService.createChatCompletion(request)
                    .getChoices().getFirst().getMessage().getContent();

        } catch (Exception e) {
            log.error("⚠️ Ошибка при анализе текста сайта: {}", e.getMessage());
            return "Информация с сайта недоступна.";
        }
    }

















    public List<String> diversifyReviews(List<String> rawReviews) {
        if (rawReviews.isEmpty()) return List.of();

        StringBuilder userPrompt = new StringBuilder("""
        Вот список отзывов. Перепиши каждый отзыв так, чтобы:
        - они стали разнообразными по стилю, длине, лексике;
        - звучали более естественно, как если бы их писали разные люди;
        - не использовались одинаковые фразы;
        - избегались шаблоны вроде «в восторге», «превзошло ожидания» и т. п.;
        - сохранился общий смысл, но стиль был более разговорным и реалистичным.
        - тексты должны быть абсолютно разные между собой

        Ответ верни в формате JSON-массива строк. Пример:
        ["отзыв 1", "отзыв 2", ...]
    """);

        for (int i = 0; i < rawReviews.size(); i++) {
            userPrompt.append("Отзыв ").append(i + 1).append(": ").append(rawReviews.get(i)).append("\n\n");
        }

        ChatCompletionRequest request = ChatCompletionRequest.builder()
                .model("gpt-4o")
                .messages(List.of(
                        new ChatMessage("system", "Ты редактор пользовательских отзывов."),
                        new ChatMessage("user", userPrompt.toString())
                ))
                .temperature(0.9)
                .maxTokens(400)
                .build();

        try {
            ChatCompletionResult result = openAiService.createChatCompletion(request);
            String jsonContent = result.getChoices().getFirst().getMessage().getContent().trim();

// Убираем markdown-форматирование
            jsonContent = jsonContent.replaceAll("(?s)^```(?:json)?|```$", "").trim();

            ObjectMapper mapper = new ObjectMapper();
            return mapper.readValue(jsonContent, new TypeReference<>() {});

        } catch (Exception e) {
            log.error("❌ Ошибка при разнообразии отзывов: {}", e.getMessage());
            return List.of("⚠️ Ошибка при обработке отзывов.");
        }
    }






















    public String generateReview(String category, String tone, String site) {
//        System.out.println("Готовы парсить сайт " + url);
//        String site = websiteParserService.extractTextFromWebsite("naigru.ru");
//        String site = selenium.getRenderedText("https://naigru.ru");

        String prompt = String.format("""
        Напиши живой, натуральный отзыв на товар или услугу.
        Категория: %s
        Тональность: %s
        Информация о компании: %s

        Следуй инструкции по написанию %s
        """, category, tone, site, promtText);

//        String prompt = String.format("""
//        Напиши живой, натуральный отзыв на товар или услугу.
//        Категория: %s
//        Тональность: %s
//        Информация о компании: %s
//
//        Укажи, зачем человек купил, что понравилось, и общее впечатление.
//        Объём: 2–3 абзаца. Следуй инструкции по написанию %s
//        """, category, tone, site, promtText);

        ChatCompletionRequest request = ChatCompletionRequest.builder()
                .model("gpt-4o") // или "gpt-3.5-turbo"
                .messages(List.of(
                        new ChatMessage("system", "Ты — профессиональный копирайтер."),
                        new ChatMessage("user", prompt)
                ))
                .temperature(0.8)
                .maxTokens(300)
                .build();

        try {
            ChatCompletionResult result = openAiService.createChatCompletion(request);
            return result.getChoices().getFirst().getMessage().getContent();
        } catch (OpenAiHttpException e) {
            log.error("Ошибка OpenAI: {}", e.getMessage());
            return "⚠️ Ошибка при генерации отзыва: лимит API исчерпан или временно недоступен.";
        } catch (Exception e) {
            log.error("Неизвестная ошибка при обращении к OpenAI", e);
            return "⚠️ Неизвестная ошибка при генерации отзыва.";
        }
    }

    public List<String> generateMultipleReviews(String category, String tone, String site, int count) {
        String prompt = String.format("""
Напиши %d разных, живых и натуральных отзывов на товар или услугу.
Категория: %s
Тональность: %s
Информация о компании: %s

Каждый отзыв должен быть:
- от первого лица;
- объёмом 2–3 абзаца;
- с разными причинами покупки, впечатлениями и лексикой;
- отличаться:
  - по содержанию,
  - по стилю,
  - по формулировкам;
- не используй одни и те же фразы, слова и обороты.
- используй смайлики в отзывах

Разделяй отзывы пустой строкой.
""", count, category, tone, site);

        ChatCompletionRequest request = ChatCompletionRequest.builder()
//                .model("gpt-4o")
                .model("gpt-3.5-turbo")
                .messages(List.of(
                        new ChatMessage("system", "Ты — профессиональный копирайтер."),
                        new ChatMessage("user", prompt)
                ))
                .temperature(0.9)
                .maxTokens(300 * count) // запас на все отзывы
                .build();

        try {
            ChatCompletionResult result = openAiService.createChatCompletion(request);
            String rawText = result.getChoices().getFirst().getMessage().getContent();

            // Разделяем по пустым строкам
            return Arrays.stream(rawText.split("\n\\s*\n"))
                    .map(String::trim)
                    .filter(s -> !s.isBlank())
                    .toList();

        } catch (OpenAiHttpException e) {
            log.error("Ошибка OpenAI: {}", e.getMessage());
            return List.of("⚠️ Ошибка при генерации отзыва.");
        } catch (Exception e) {
            log.error("Неизвестная ошибка при обращении к OpenAI", e);
            return List.of("⚠️ Неизвестная ошибка при генерации отзыва.");
        }
    }



    public String safeAnalyzeSiteText(String siteRaw) {
        try {
            ChatCompletionRequest request = ChatCompletionRequest.builder()
                    .model("gpt-3.5-turbo")
                    .messages(List.of(
                            new ChatMessage("system", "Ты помощник, который структурирует текст сайта для генерации отзывов."),
                            new ChatMessage("user", "На основе следующего текста выдели и кратко ответь по шаблону на вопросы:\n" +
                                    siteRaw +
                                    "\n\nШаблон:\n" +
                                    "1. Название и адрес филиалов:\n" +
                                    "2. Основная сфера деятельности:\n" +
                                    "3. Как давно вы работают:\n" +
                                    "4. Что именно вы предлагают:\n" +
                                    "5. Как выглядит вход:\n" +
                                    "6. Интерьер:\n" +
                                    "7. Парковка и удобства:\n" +
                                    "8. Укажи название каждого товара/услуги и их Цену:\n" +
//                                    "9. Хиты продаж:\n" +
                                    "10. Уникальные предложения:\n" +
                                    "11. Имена и должности ключевых сотрудников:\n" +
                                    "12. Опыт, специализация:\n" +
//                                    "13. Акции и скидки:\n" +
//                                    "14. Фразы для отзыва:\n" +
//                                    "15. Цитаты клиентов:\n" +
//                                    "16. Как происходит заказ:\n" +
//                                    "17. Гарантии и возвраты:\n" +
                                    "18. Срок выполнения:\n" +
                                    "19. Прочая информация:")
                    ))
                    .build();

            return openAiService.createChatCompletion(request)
                    .getChoices().get(0).getMessage().getContent();

        } catch (Exception e) {
            log.error("⚠️ Ошибка при анализе текста сайта: {}", e.getMessage());
            return "Информация с сайта недоступна.";
        }
    }

    String promtText = "1) Мне нужно сгенерировать один отзыв для бизнеса. Информацию я прикрепляю. Важно, чтобы отзывы были максимально естественными, будто их писал живой человек. Не идеально выверенные, а именно такие, какие мы встречаем в реальности — с чуть-чуть \"кривыми\" фразами, живыми мыслями и разной эмоциональностью.\n" +
            "\n" +
            "Основные требования:\n" +
            "\n" +
            "1. Живой, \"по-человечески\" сформулированный текст:\n" +
            "\n" +
            "Использовать естественную речь: где-то просторечия, где-то не совсем грамотная формулировка. Главное — чтобы читалось, как настоящий отзыв.\n" +
            "\n" +
            "Ошибки допустимы: немного нарушена пунктуация, сбивчивая структура предложения, повтор слов — всё это только добавляет правдоподобности.\n" +
            "\n" +
            "Без излишней стилистической грязи — не превращать текст в \"язык 90-х\", но и не вылизывать.\n" +
            "\n" +
            "Примеры формулировок:\n" +
            "\n" +
            "\"ну норм в целом, но я б чуть по-другому делала\"\n" +
            "\n" +
            "\"не думала, что эффект будет такой, прям как будто мне шею новую поставили\"\n" +
            "\n" +
            "\"за эти деньги ожидала меньше, если честно\"\n" +
            "\n" +
            "\"сама не верю, что пишу отзыв, но Рустам реально помог\"\n" +
            "\n" +
            "---\n" +
            "\n" +
            "2. Переменные, которые рандомно меняются и могут быть опущены:\n" +
            "\n" +
            "Имя мастера (упоминается не всегда)\n" +
            "\n" +
            "Услуга или процедура (может быть описана подробно, а может — вскользь)\n" +
            "\n" +
            "Цена (разными словами: «вышло недорого», «отдала 1300», «думала, будет дороже» и т.д.)\n" +
            "\n" +
            "Место/район/адрес (может быть указано, может быть пропущено)\n" +
            "\n" +
            "Результат (описан развернуто или лаконично)\n" +
            "\n" +
            "---\n" +
            "\n" +
            "3. Разнообразие стилей и характеров: Каждый отзыв должен звучать, как от другого человека, с разным стилем:\n" +
            "\n" +
            "пол (м/ж)\n" +
            "\n" +
            "возраст (например, женщина 25 лет, мужчина 42 года и т.д.)\n" +
            "\n" +
            "стиль: дружелюбный, придирчивый, юморной, сухой/официальный, эмоциональный, скромный, болтливый и пр.\n" +
            "\n" +
            "---\n" +
            "\n" +
            "4. Разная длина текста выбери рандомно:\n" +
            "\n" +
            "Короткий: 1–2 предложения\n" +
            "\n" +
            "Средний: 3–5 предложений\n" +
            "\n" +
            "Длинный: 6–10 предложений или больше\n" +
            "(можно с описанием хода процедуры, ощущения до/после, общения с мастером, атмосферы и т.п.)\n" +
            "\n" +
            "---\n" +
            "\n" +
            "5. Плавающий порядок информации:\n" +
            "\n" +
            "Один отзыв может начинаться с результата, другой — с обстановки\n" +
            "\n" +
            "Иногда нет имени мастера, иногда даже не указана услуга — только впечатления\n" +
            "\n" +
            "Перемешанный порядок блоков, чтобы не было шаблонного \"Имя – Услуга – Отзыв – Цена\"\n" +
            "\n" +
            "---\n" +
            "\n" +
            "6. Детали, подтверждающие, что человек реально был:\n" +
            "\n" +
            "Упоминания мелочей: \"чай с мятой на входе\", \"пледик в зале\", \"музыка как в спа\", \"у Рустама всегда чисто и светло\", \"пока ждала — смотрела в окно, там котик сидел, смешной\"\n" +
            "\n" +
            "Итог: Отзывы должны быть максимально разными, живыми, неидеальными, без ощущения, что их писал копирайтер. Цель — как будто ты зашёл на Авито или 2ГИС и читаешь реальные впечатления. Чуть-чуть коряво, но от души.\n" +
            "\n" +
            "Человечности отзывы придают:\n" +
            "\n" +
            "Есть ли чуть сбивчивые или разговорные фразы?\n" +
            "\n" +
            "Присутствуют ли слова или выражения, которые используют обычные люди (а не копирайтеры)?\n" +
            "\n" +
            "Звучит ли отзыв так, будто его писали быстро, на эмоциях или между делом?\n" +
            "\n" +
            "Есть ли чуть \"косые\" фразы, неправильный порядок слов, лишние местоимения или запятые?\n" +
            "\n" +
            "Есть ли примеры простонародных слов или просторечий (но не перебор)?\n" +
            "\n" +
            "Текст не выглядит, как будто его вычитали и отредактировали?\n" +
            "\n" +
            "Указаны какие-то мелочи (чай, плед, запах, коврик, настроение в помещении)?\n" +
            "\n" +
            "[Упомянуты особенности мастера или общения (\"Рустам шутит\", \"Марина говорит мягко\", \"непонятно объяснила сначала, но потом всё ок\")?\n" +
            "\n" +
            "Есть какая-то индивидуальная реакция, не просто \"понравилось/не понравилось\"?\n" +
            "\n" +
            "Этот отзыв не похож на предыдущие по стилю?\n" +
            "\n" +
            "Отличается ли порядок подачи информации?\n" +
            "\n" +
            "Нет ли одинаковых формулировок или \"дежурных\" слов?\n" +
            "\n" +
            "Чувствуется ли настроение автора (раздражение, удивление, восторг, лёгкий сарказм)?\n" +
            "\n" +
            "Есть ли фразы типа \"я не ожидал\", \"если честно\", \"думала будет хуже\", \"сначала напряглась\", \"оказалось — зря\"?\n" +
            "\n" +
            "Отзыв не начинается как инструкция (\"Я была у мастера такого-то, делала то-то, всё понравилось\")?\n" +
            "\n" +
            "Есть ощущение, что это написал обычный человек, а не текстовый генератор?\n" +
            "\n" +
            "Если хотя бы 4–5 пунктов из 6 — \"да\", то отзыв уже читается живо и правдоподобно.\n" +
            "Если 6/6 — это отличный \"народный\" текст, в который верят и читают до конца.\n" +
            "\n" +
            "2)\n" +
            "\n" +
            "Ты — копирайтер, специализирующийся на написании живых, реалистичных отзывов, которые выглядят так, будто их написали настоящие люди. Твоя задача — создавать отзывы для компаний из разных сфер так, чтобы они не выглядели заказными или написанными искусственным интеллектом. Перед написанием представь, что ты — реальный человек с конкретной историей и эмоциями.\n" +
            " Главные принципы:\n" +
            "Разнообразие:\n" +
            "Избегай шаблонов — начинай и заканчивай отзывы по-разному.\n" +
            "Используй разные стили: от лёгкой болтовни до сдержанных, деловых комментариев.\n" +
            "В каждом блоке отзывов обязательно должен быть хотя бы один с лёгким негативным моментом (но с положительным общим тоном).\n" +
            "Можно использовать смайлы, капс, междометия — смотри по ситуации.\n" +
            "Не пиши всё от одного и того же пола или от имени \"абстрактного клиента\" — разнообразие персонажей повышает правдоподобие.\n" +
            "Правдоподобность:\n" +
            "Добавляй конкретику: что именно заказал человек, что понравилось/раздражало, как происходило взаимодействие.\n" +
            "Не используй обтекаемые фразы типа: “услуга оказана качественно”, “всё понравилось” без примеров.\n" +
            "Используй детали, даже мелочи: как говорили, что предлагали, что запомнилось.\n" +
            "Если сомневаешься — подумай: написал бы так живой человек, когда делится впечатлением?\n" +
            "  Чередование длины отзывов:\n" +
            "Короткие: 2–3 предложения\n" +
            "Средние: 4–6 предложений\n" +
            "Длинные (развёрнутые): 7+ предложений\n" +
            " Внутри группы отзывов всегда должно быть сочетание разной длины.\n" +
            "Перед тем как принять отзыв за готовый, проверь: содержит ли он хотя бы 4 из 8 признаков живой неформальной речи?\n" +
            "Список признаков:\n" +
            "Разговорные выражения, жаргонизмы, прилагательные в стиле \"человек с эмоцией\":\n" +
            " Примеры: “жесть”, “улёт”, “капец”, “офигенно”, “вкуснятина”, “клёво”, “доволен как слон”,  “офигеть,  “обалдеть”, “классный”, “четкий”, “клёвый”, “суперский”, “опупенный”,  “обалденный”,“шиш с маслом” “бесплатный сыр только в мышеловке.”, “пледик,” “шубка”,  “сумочка”,  “колечко”,  “туфельки”,\n" +
            "Небольшие ошибки:\n" +
            " Например: “вродебы”, “всё круто,но”, точка без пробела, лишние знаки препинания, неполный синтаксис и т.д.\n" +
            "Избегание шаблонов:\n" +
            " Не пиши как ИИ: “работа выполнена профессионально”, “качество на высоте”.\n" +
            "Междометия, фразы-паразиты:\n" +
            " “ну”, “вот”, “если честно”, “я фиг знает”,”короче”типа” “блин” “вроде как”, “походу”.\n" +
            "Скачкообразный ход мысли:\n" +
            " Пример: “Сначала думал всё будет ок, но потом пошло всё через одно место, хотя в итоге вроде даже ничего вышло.”\n" +
            "Эмоциональные всплески:\n" +
            " “Я в шоке был”, “чуть не заплакала”, “пипец, как понравилось”, “с ума сойти”.\n" +
            "Смешение стилей:\n" +
            " Деловой стиль + сленг, заглавные слова, эмодзи, CAPS LOCK, прерывистые фразы с точками: “Оперативно. БЕЗ нервов. Красавцы.”\n" +
            "Повторы и тавтология:\n" +
            " “Короче, короче, это было нечто”, “всё понравилось, реально всё”.\n" +
            "Если отзыв не содержит хотя бы 3 признаков, он слишком стерильный — переделай.\n" +
            " Если в отзыве все 8 признаков — \uD83D\uDD25 идеальный текст, сохрани и используй как эталон.\n" +
            " Если нет ЦА или деталей — проанализируй нишу и запроси нужную инфу.";

}
