version: '3'

services:
  mysql:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    ports:
      - '3306:3306'


  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    restart:
      always
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/o-ogo.crt:/etc/ssl
      - ./data/nginx/ca.crt:/etc/ssl
      - ./data/nginx/o-ogo.key:/etc/ssl
      - ./data/nginx/www:/var/www
      - ./data/nginx/logs/nginx:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      # nginx должен общаться с php контейнером
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    links:
      - app


  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_NO_CACHE: 1
    ports:
      - "8080:8080"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    depends_on:
      - mysql


  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    ports:
      - '9000:80'
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

volumes:
  mysql_data:


#  certbot:
#    image: certbot/certbot
#    restart: unless-stopped
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


#  adminer:
#    image: adminer:latest
#    restart: always
#    ports:
#        - '8090:8080'
#    depends_on:
#      - mysql
#    environment:
#      PMA_HOST: mysql
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

#    network_mode: "host"

#networks:
#  mynetwork:
#    driver: host





#




#networks:
#  mynetwork:
#    driver: bridge









#services:
#  mysql:
#    image: mysql:latest
#    environment:
#      - MYSQL_DATABASE=otziv
#      - MYSQL_PASSWORD=545321
#      - MYSQL_ROOT_PASSWORD=root_password
#      - MYSQL_USER=hunt
#    restart: always
#    ports:
#      - '3306'
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#        - '8080:8080'
#  api:
#    build: .
#    depends_on:
#      - mysql
#    environment:
#      SPRING_PROFILES_ACTIVE: application-server
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/otziv?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
#      DB_USER: root
#      DB_PASSWORD: password


#      - SPRING_PROFILES_ACTIVE=production
#      - SERVER_PORT=8080
#      - JWT_SECRET=SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
#      - JWT_LIFETIME=5m
#      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
#      - SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/otziv
#      - SPRING_DATASOURCE_USERNAME=hunt
#      - SPRING_DATASOURCE_PASSWORD=545321
#      - SPRING_JPA_HIBERNATE_DDL-AUTO=validate
#      - SPRING_JPA_SHOW-SQL=true
#      - FLYWAY_BASELINE-ON-MIGRATE=true
#    ports:
#      - "8080:8080"